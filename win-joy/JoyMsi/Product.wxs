<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">
  <?if $(var.Platform) = x64 ?>
    <?define bitness = "(x64)" ?>
    <?define Win64 = "yes" ?>
    <?define system_folder = [System64Folder] ?>
    <?define programs_folder = "ProgramFiles64Folder" ?>
  <?else ?>
    <?define bitness = "(x86)" ?>
    <?define Win64 = "no" ?>
    <?define system_folder = [SystemFolder] ?>
    <?define programs_folder = "ProgramFilesFolder" ?>
  <?endif ?>
  
  <!--
  ====================================================================================
  JOY PRODUCT/PACKAGE
  ====================================================================================
   -->
	<Product Id="*" Name="Joy $(var.bitness)" Language="1033" Version="1.74.0.0" Manufacturer="JoyTeam" UpgradeCode="150cd1a4-afe0-4e9a-af16-0088b3b116f5">
		<Package InstallerVersion="200" Compressed="yes" InstallScope="perMachine"  Description="Joy Installer"/>

    <!-- IF perUser is needed
    <Property Id="ALLUSERS" Secure="yes" Value="2"/>
    <Property Id="MSIINSTALLPERUSER" Secure="yes" Value="1" />
    -->

    <Property Id="ARPHELPLINK" Value="https://github.com/cisco/joy" />

    <MajorUpgrade DowngradeErrorMessage="A newer version of [ProductName] is already installed." />
    <MediaTemplate EmbedCab="yes"/>

    <Feature Id="MainProgram" Title="Joy" Level="1">
      <ComponentGroupRef Id="MainBinaries" />
      <ComponentRef Id="JoyConfig_comp" />
      <ComponentRef Id="ScheduleTask_comp" />
      <ComponentRef Id="DeleteAppFolder_comp" />
    </Feature>

    <!-- Make sure Powershell 3.0 is available.
    Needed for scheduledtasks Powershell module
    <Property Id="POWERSHELL30">
      <RegistrySearch Id="POWERSHELL30"
                      Root="HKLM"
                      Key="SOFTWARE\Microsoft\Powershell\3"
                      Name="Install"
                      Type="raw" />
    </Property>
    <Condition Message="This installer requires Windows PowerShell version 3.0 or greater">
      <![CDATA[Installed OR POWERSHELL30]]>
    </Condition>
    -->

    <!-- Create Scheduled Task to start Joy
    <CustomAction Id="CreateScheduledTask"
                  Return="check"
                  Execute="deferred"
                  Impersonate="no"
                  Directory="JoyAppFolder"
                  ExeCommand="&quot;$(var.system_folder)CMD.EXE&quot; /C &quot;powershell -ExecutionPolicy ByPass -Command &quot;[JoyAppFolder]schedule-task.ps1&quot; -Start&quot;" />
    -->
    <!-- Delete Joy Scheduled Task
    <CustomAction Id="DeleteScheduledTask"
                  Return="check"
                  Execute="deferred"
                  Impersonate="no"
                  Directory="JoyAppFolder"
                  ExeCommand="&quot;$(var.system_folder)CMD.EXE&quot; /C &quot;powershell -ExecutionPolicy ByPass -Command &quot;[JoyAppFolder]schedule-task.ps1&quot; -Unregister&quot;"/>
    -->
    <!-- Custom action sequence for ScheduledTask
    <InstallExecuteSequence>
      <Custom Action="CreateScheduledTask" After="InstallFiles">NOT Installed</Custom>
      <Custom Action="DeleteScheduledTask" Before="RemoveFiles">Installed</Custom>
    </InstallExecuteSequence>
    -->
  </Product>

  <!--
  ====================================================================================
  Setting up the directories that contain installed files
      
  %LocalAppData% -> %USERPROFILE%\AppData\Local
  INSTALLFOLDER ->  %ProgramFiles%\Joy (IF perMachine install).
  INSTALLFOLDER -> %LocalAppData%\Programs\Joy (IF perUser install).
  JoyAppFolder -> %LocalAppData%\Joy
  -->
  <Fragment>
    <Directory Id="TARGETDIR" Name="SourceDir">
      <Directory Id="$(var.programs_folder)">
        <Directory Id="INSTALLFOLDER" Name="Joy" />
      </Directory>
      <Directory Id="LocalAppDataFolder">
        <Directory Id="JoyAppFolder" Name="Joy" />
      </Directory>
    </Directory>
  </Fragment>

  <!--
  ====================================================================================
  Upon creation of the JoyAppFolder, record an action to delete on uninstall, and
  add a registry key for tracking the folder.
  -->
  <Fragment>
    <DirectoryRef Id='JoyAppFolder'>
      <Component Id="DeleteAppFolder_comp">
        <RemoveFolder Id="DeleteAppFolder" On="uninstall" />
        <RegistryValue Root='HKCU' Key='Software\[Manufacturer]\[ProductName]'
                        Type='integer' Name ='JoyAppDataInstalled' Value='1' KeyPath='yes'/>
      </Component>
    </DirectoryRef>
  </Fragment>

  <!--
  ====================================================================================
  Application Data Files
  
  IMPORTANT: If the location or name of the file is changed, a new Guid MUST be generated and pasted here.
  Generate Guid using Visual Studio: Tools->Create GUID
   -->
  <Fragment>
    <Component Id="JoyConfig_comp" Directory="JoyAppFolder" Guid="00F58262-1B2F-4736-9040-1200D8FCA14F">
      <File Name="win-options.cfg" Source="$(var.SolutionDir)\win-options.cfg" />
      <RegistryValue Root='HKCU' Key='Software\[Manufacturer]\[ProductName]'
                      Type='string' Name='JoyConfigFile' Value='[JoyAppFolder]\win-options.cfg' KeyPath='yes'/>
    </Component>
    <Component Id="ScheduleTask_comp" Directory="JoyAppFolder" Guid="2CE28E37-237F-4ACB-98B2-2072E1752D87">
      <File Name="schedule-task.ps1" Source="$(var.SolutionDir)\schedule-task.ps1" />
      <RegistryValue Root='HKCU' Key='Software\[Manufacturer]\[ProductName]'
                      Type='string' Name='ScheduleTaskFile' Value='[JoyAppFolder]\schedule-task.ps1' KeyPath='yes'/>
    </Component>
  </Fragment>

  <!--
  ====================================================================================
  Main Binary Files
  ====================================================================================
   -->
  <Fragment>
    <ComponentGroup Id="MainBinaries" Directory="INSTALLFOLDER">
      <Component Id="MainExecutable" Win64="$(var.Win64)">
        <File Source="$(var.win-joy.TargetPath)" KeyPath="yes"/>
      </Component>
      <Component Id="GetoptLibrary" Win64="$(var.Win64)">
        <File Name="getopt.dll" Source="..\..\windows\64\DLL\getopt.dll" KeyPath="yes" />
      </Component>
      <Component Id="CurlLibrary" Win64="$(var.Win64)">
        <File Name="libcurl.dll" Source="..\..\windows\64\DLL\libcurl.dll" KeyPath="yes" />
      </Component>
      <Component Id="Eay32Library" Win64="$(var.Win64)">
        <File Name="libeay32.dll" Source="..\..\windows\64\DLL\libeay32.dll" KeyPath="yes" />
      </Component>
      <Component Id="Msvcr100Library" Win64="$(var.Win64)">
        <File Name="msvcr100.dll" Source="..\..\windows\64\DLL\msvcr100.dll" KeyPath="yes" />
      </Component>
      <Component Id="Msvcr120Library" Win64="$(var.Win64)">
        <File Name="msvcr120.dll" Source="..\..\windows\64\DLL\msvcr120.dll" KeyPath="yes" />
      </Component>
      <Component Id="PthreadVc2Library" Win64="$(var.Win64)">
        <File Name="pthreadVC2.dll" Source="..\..\windows\64\DLL\pthreadVC2.dll" KeyPath="yes" />
      </Component>
      <Component Id="SslEay32Library" Win64="$(var.Win64)">
        <File Name="ssleay32.dll" Source="..\..\windows\64\DLL\ssleay32.dll" KeyPath="yes" />
      </Component>
      <Component Id="VcRuntime140Library" Win64="$(var.Win64)">
        <File Name="vcruntime140.dll" Source="..\..\windows\64\DLL\vcruntime140.dll" KeyPath="yes" />
      </Component>
    </ComponentGroup>
  </Fragment>
</Wix>
